<?php

use Drupal\Core\Config\FileStorage;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\field\Entity\FieldStorageConfig;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_install().
 */
function localgov_elections_reporting_install($is_syncing) {
  $module_path = \Drupal::getContainer()
    ->get('module_handler')
    ->getModule('localgov_elections_reporting')
    ->getPath();

  $overrides = $module_path . '/config/override';
  $files = new FileStorage($overrides);

  foreach ($files->listAll() as $id) {
    $config_data = $files->read($id);
    $config = \Drupal::configFactory()->getEditable($id);
    $config->setData($config_data)->save();
  }
}


/**
 * Implements hook_uninstall().
 *
 */
function localgov_elections_reporting_uninstall($is_syncing) {
  $storage_handler = \Drupal::entityTypeManager()
    ->getStorage('node');
  $nodes = $storage_handler->loadByProperties(['type' => 'election']);
  try {
    $storage_handler->delete($nodes);
  } catch (EntityStorageException $e) {
  }
  $nodes = $storage_handler->loadByProperties(['type' => 'division_vote']);
  try {
    $storage_handler->delete($nodes);
  } catch (EntityStorageException $e) {
  }
}


/**
 * Adds options to hide and display majority details and map for elections.
 */
function localgov_elections_reporting_update_9000() {
  $module_path = \Drupal::getContainer()
      ->get('module_handler')
      ->getModule('localgov_elections_reporting')
      ->getPath();

    // https://drupal.stackexchange.com/questions/227753/how-to-create-a-field-with-hook-update
    // Fields need to be created properly with field storage config APIs.
    $fields = [
        'field.storage.node.field_display_map',
        'field.storage.node.field_display_majority_details'
    ];

    foreach ($fields as $field){
      $yml = Yaml::parse(file_get_contents($module_path . "/config/install/$field.yml"));
      if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
        FieldStorageConfig::create($yml)->save();
      }
    }

    // These don't need to do any field creation the following should be okay.
    $config_to_update = [
        'field.field.node.election.field_display_map',
        'field.field.node.election.field_display_majority_details',
        'core.entity_form_display.node.election.default',
        'core.entity_view_display.node.election.teaser',
        'core.entity_view_display.node.election.default'
    ];

    $install_dir = new FileStorage($module_path . '/config/install/');
    foreach ($config_to_update as $config){
      $data = $install_dir->read($config);
      $config_obj = \Drupal::configFactory()->getEditable($config);
      $config_obj->setData($data);
      $config_obj->save(TRUE);
    }

    $elections = Drupal::entityTypeManager()->getStorage('node')->loadByProperties([
        'type' => 'election'
    ]);

    // New field values will be empty so set their defaults.
    if ($elections){
      /** @var \Drupal\node\NodeInterface $election */
      foreach ($elections as $election){
        $election->set("field_display_map", TRUE);
        $election->set("field_display_majority_details", TRUE);
        try {
          $election->save();
          $id = $election->id();
          Drupal::logger('localgov_elections_reporting')
              ->notice("Set default values for new fields field_display_map and field_display_majority_details for election with id $id");
        } catch (EntityStorageException $exception){
          Drupal::logger('localgov_elections_reporting')->error($exception->getMessage());
        }
      }
    }
    drupal_flush_all_caches();
}